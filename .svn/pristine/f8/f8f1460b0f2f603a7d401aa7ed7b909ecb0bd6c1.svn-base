
// Components, functions, plugins
import { Component, NgModule, ChangeDetectionStrategy } from '@angular/core';
import { NavController } from '@ionic/angular';
import { Storage } from '@ionic/storage';
import { LocalstorageService } from './../../services/localstorage.service';
import { Router } from '@angular/router';

//Pages  

//import { DatabasePage } from '../database/database';
//import { HelpPage } from '../help/help';
//import { NotesPage } from '../notes/notes';
//import { LoginPage } from '../login/login';
//import { ProfilePage } from '../profile/profile';
//import { ConversationsPage } from '../conversations/conversations';
//import { MyAgendaFull } from '../myagendafull/myagendafull';
//import { MyAgenda } from '../myagenda/myagenda';
//import { ConferenceCityPage } from '../conferencecity/conferencecity';
//import { EvaluationConference } from '../evaluationconference/evaluationconference';
//import { ActivityPage } from '../activity/activity';
//import { ConversationPage } from '../conversation/conversation';
//import { AttendeesPage } from '../attendees/attendees';


// Temporary Support Pages
//import { FloorplanMappingPage } from '../floorplanmapping/floorplanmapping';


@Component({
  selector: 'app-more',
  templateUrl: 'more.page.html',
  styleUrls: ['./more.page.scss'],
  changeDetection: ChangeDetectionStrategy.OnPush
})

export class MorePage {

	constructor(public navCtrl: NavController, 
				private storage: Storage,
				private router: Router,
				private localstorage: LocalstorageService) {
	}



/*


	ionViewDidLoad() {
		console.log('ionViewDidLoad MorePage');
	}

  	NavToPage(PageID) {

		var AttendeeID = this.localstorage.getLocalValue('AttendeeID');

		switch(PageID) {
			case "HelpPage":
				this.router.navigateByUrl('./pages/HelpPage');
			case "DatabasePage":
				this.router.navigateByUrl('./pages/DatabasePage');
				break;
//			case "FloorplanMappingPage":
//				this.navCtrl.push(FloorplanMappingPage, {}, {animate: true, direction: 'forward'});
//				break;
			case "NotesPage":
				if (AttendeeID == '' || AttendeeID == null) {
					// If not, store the page they want to go to and go to the Login page
					console.log('Stored AttendeeID: ' + AttendeeID);
					this.storage.set('NavigateToPage', "Notes");
					this.router.navigateByUrl('./pages/LoginPage');
				} else {
					// Otherwise just go to the page they want
					this.router.navigateByUrl('./pagesNotesPage');
				}
				break;
			case "EventSurvey":
				if (AttendeeID == '' || AttendeeID == null) {
					// If not, store the page they want to go to and go to the Login page
					console.log('Stored AttendeeID: ' + AttendeeID);
					this.storage.set('NavigateToPage', "EventSurvey");
					this.router.navigateByUrl('./pages/LoginPage');
				} else {
					// Otherwise just go to the page they want
					this.router.navigateByUrl('./pages/EvaluationConferencePage');
				}
				break;

				case "ProfilePage":
				if (AttendeeID == '' || AttendeeID == null) {
					// If not, store the page they want to go to and go to the Login page
					console.log('Stored AttendeeID: ' + AttendeeID);
					this.storage.set('NavigateToPage', "Profile");
					this.router.navigateByUrl('./pages/LoginPage');
				} else {
					// Otherwise just go to the page they want
					this.router.navigateByUrl('./pages/ProfilePage');
				}
				break;


				case "ActivityPage":
				if (AttendeeID == '' || AttendeeID == null) {
					// If not, store the page they want to go to and go to the Login page
					console.log('Stored AttendeeID: ' + AttendeeID);
					this.localstorage.setLocalValue('ActivityFeedID', '0');
					this.storage.set('NavigateToPage', "Activity");
					this.router.navigateByUrl('./pages/LoginPage');
				} else {
					// Otherwise just go to the page they want
					this.localstorage.setLocalValue('ActivityFeedID', '0');
					this.router.navigateByUrl('./pages/ActivityPage');
				}
				break;


				case "ConversationPage":
				if (AttendeeID == '' || AttendeeID == null) {
					// If not, store the page they want to go to and go to the Login page
					console.log('Stored AttendeeID: ' + AttendeeID);
					this.storage.set('NavigateToPage', "Conversation");
					this.router.navigateByUrl('./pages/LoginPage');
				} else {
					// Otherwise just go to the page they want
					this.router.navigateByUrl('./pages/ConversationPage');
				}
				break;





			case "MyAgenda":
				if (AttendeeID == '' || AttendeeID == null) {
					// If not, store the page they want to go to and go to the Login page
					console.log('Stored AttendeeID: ' + AttendeeID);
					this.storage.set('NavigateToPage', "MyAgenda");
					this.router.navigateByUrl('./pages/LoginPage');
				} else {
					// Otherwise just go to the page they want
					this.router.navigateByUrl('./pages/MyAgendaPage');
				}
				break;
			case "MyAgendaFull":
				if (AttendeeID == '' || AttendeeID == null) {
					// If not, store the page they want to go to and go to the Login page
					console.log('Stored AttendeeID: ' + AttendeeID);
					this.storage.set('NavigateToPage', "MyAgendaFull");
					this.router.navigateByUrl('./pages/LoginPage');
				} else {
					// Otherwise just go to the page they want
					this.router.navigateByUrl('./pages/MyAgendaFullPage');
				}
				break;
				case "AttendeesPage":
				if (AttendeeID == '' || AttendeeID == null) {
					// If not, store the page they want to go to and go to the Login page
					console.log('Stored AttendeeID: ' + AttendeeID);
					this.storage.set('NavigateToPage', "Attendees");
					this.router.navigateByUrl('./pages/LoginPage');
				} else {
					// Otherwise just go to the page they want
					this.router.navigateByUrl('./pages/AttendeesPage');
				}
				break;
				case "ConferenceCityPage":
				if (AttendeeID == '' || AttendeeID == null) {
					// If not, store the page they want to go to and go to the Login page
					console.log('Stored AttendeeID: ' + AttendeeID);
					this.storage.set('NavigateToPage', "ConferenceCity");
					this.router.navigateByUrl('./pages/LoginPage');
				} else {
					// Otherwise just go to the page they want
					this.router.navigateByUrl('./pages/ConferenceCityPage');
				}
				break;
        }




	};
	
	*/

}


